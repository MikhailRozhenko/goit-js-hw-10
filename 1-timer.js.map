{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimeInput = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n\n    if (userSelectedDate < new Date()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        timeout: 3000,\n        pauseOnHover: true,\n      });\n\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimeInput, options);\n\nstartBtn.addEventListener('click', () => {\n  datetimeInput.disabled = true;\n  startBtn.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const timeDifference = userSelectedDate - new Date();\n\n    if (timeDifference <= 0) {\n      clearInterval(intervalId);\n      daysEl.textContent = '00';\n      hoursEl.textContent = '00';\n      minutesEl.textContent = '00';\n      secondsEl.textContent = '00';\n      datetimeInput.disabled = false;\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    daysEl.textContent = addLeadingZero(time.days);\n    hoursEl.textContent = addLeadingZero(time.hours);\n    minutesEl.textContent = addLeadingZero(time.minutes);\n    secondsEl.textContent = addLeadingZero(time.seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["datetimeInput","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","intervalId","timeDifference","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAMA,MAAMA,EAAgB,SAAS,eAAe,iBAAiB,EACzDC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GAEpB,MAAMC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAIF,CAAgB,EAExBA,EAAmB,IAAI,MACzBG,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,WACV,QAAS,IACT,aAAc,EACtB,CAAO,EAEDR,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAS,EAAUV,EAAeO,CAAO,EAEhCN,EAAS,iBAAiB,QAAS,IAAM,CACvCD,EAAc,SAAW,GACzBC,EAAS,SAAW,GAEpB,MAAMU,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAiBN,EAAmB,IAAI,KAE9C,GAAIM,GAAkB,EAAG,CACvB,cAAcD,CAAU,EACxBT,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxBL,EAAc,SAAW,GACzB,MACD,CAED,MAAMa,EAAOC,EAAUF,CAAc,EACrCV,EAAO,YAAca,EAAeF,EAAK,IAAI,EAC7CV,EAAQ,YAAcY,EAAeF,EAAK,KAAK,EAC/CT,EAAU,YAAcW,EAAeF,EAAK,OAAO,EACnDR,EAAU,YAAcU,EAAeF,EAAK,OAAO,CACpD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}